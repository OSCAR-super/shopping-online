第一部分：前四个字节 魔术:
CA FE BA BE
第二部分：次版本号；
00 00(0)
第三部分：主版本号
00 34（3*16+4=52）——》对应版本号为jdk1.8；51对应的版本号为jdk1.7;
第四部分：常量池的个数，占两个字节；
00 19(16*1+9-1=24) 为什么-1？因为第0号常量被我们的JVM给占用了，表示的是什么都不引用；

常量池的分类:字面量类型，符号引用类型；每一种类型都有自己的结构；每一种结构的第一个字节：tag位（标记位）；
//java/lang/Object."<init>":()V 没有参数，返回值为null；
常量池的第一个常量：
0A 00 04 00 15： methodref_info  class_index 00 04(4) #4 00 15(21) #21(nameAndType_index);
第二个常量：
09 00 03 00 16： field_info 00 03 class_index #3 00 16（22）#22
第三个常量:
07 00 17  ：class_info 00 17(23)#23
第四个常量：
07 00 18 ：class_info 00 18(24)#24的位置；
第五个常量：01——》utf-8 len:00 08(8个字节），这8个字节表示的是字段描述名称，比如String name，这八个字节表示的是name
01  00 08 75 73 65 72 4E 61 6D 65；
第六个常量：class_info 00 12(18个字节)——》 java/lang/String;
01 00 12 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 69 6E 67 3B：
第七个常量：01 ——》utf-8 len： 00 06(6个字节)——》<init> 表示的构造方法；
01 00 06 3C 69 6E 69 74 3E;
第八个常量：01——》utf-8 len:03(3个字节） ——》 ()V：构造方法的描述符，无参数，无返回值；
01 00 03 28 29 56；
第九个常量：01 ——》utf-8  len:00 04(4个字节）——》Code：属性表；在每个方法中都有一个Code属性表；包含的是JVM指令
01 00 04 42 6F 64 65；
第十个常量：01 ——》utf-8 len:00 0F(15个字节) ——》 LineNumbserTab(行号表)：当抛出异常的时候，会定位到具体是某一行抛出异常，通过行号表来记录异常的行号；
                                                行号表用来保存JVM指令与源码行号之间的映射关系；
01 00 0F 4C 69 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65
第十一个常量：01——》utf-8 len：00 12（18个字节）——》LocalVariableTable(局部变量表)：在编译的时候，局部变量表会把this当做第一个参数传递到局部变量表中，其他参数为第二个变量，参数多的时候，以此类推；
01 00 12 4c 69 6e 65 4e 75 6d 62 65 72 54 61 62 6c 65 01 00
在编译的时候，this对象会被当做参数传递到局部变量表中，因此在某个方法的时候，可以随便使用this关键字，来对当前对象进行操作；
第十二个参数：01 04（4个字节） ——》 this；
01 00 04 74 68 69 73
第十三个参数：utf8 len: 00 33(51个字节)：
01 00 33 。。。。。。。。


access_flag：访问标记符号（2个字节）0X0021：ACC_PUBLIC && ACC_SUPER ;
thisClassName:索引值（2个字节）；
superClassName:索引值（2个字节）；
Interfaces_count:实现接口的个数（2个字节） 00 00——》Java类中最大实现接口的个数是65535（ffff）个（16^4-1个)；
fields_count:字段的个数；
fileds_info[] :字段数组，8个字节：
    前2个字节为字段的访问修饰符；
    3、4个字节为name_index（字段名称索引）；
    5、6个字节为descriptor_index(字段描述索引
    7、8字节位attribute_count（属性表个数））；
method_info[] :方法数组
    access_flag:表示我们的方法访问权限为ACC_PUBLIC；
    name_index表示方法名称的索引指向常量池的第七个位置，表示init，在编译期间生成的默认的构造函数；
    descriptor_index:biaoshi方法描述索引指向的常量池 #8 表示()V 五参数，无返回值；
    attribute_count:表示方法的属性个数；
    attribute_infs....
